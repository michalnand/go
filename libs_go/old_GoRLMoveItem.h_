#ifndef _GO_MOVE_ITEM_H_
#define _GO_MOVE_ITEM_H_

#include "go_defs.h"
#include "GoMove.h"

class GoRLMoveItem
{
  private:
    GoMove move;
    GoBoard board;

    std::vector<float> q_values;

  public:
    GoRLMoveItem();

    GoRLMoveItem(GoRLMoveItem& other);

    GoRLMoveItem(const GoRLMoveItem& other);

    GoRLMoveItem(GoBoard &board, GoMove &move, std::vector<float> &q_values);


    virtual ~GoRLMoveItem();

    GoRLMoveItem& operator= (GoRLMoveItem& other);
    GoRLMoveItem& operator= (const GoRLMoveItem& other);

  protected:
    void copy(GoRLMoveItem& other);
    void copy(const GoRLMoveItem& other);

  public:
    void set(GoBoard &board, GoMove &move, std::vector<float> &q_values);
    void set_q_value(float q_value);

    GoBoard& get_board();
    GoMove& get_move();
    std::vector<float>& get_q_values();
};

#endif
