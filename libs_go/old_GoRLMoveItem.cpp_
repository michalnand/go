#include "GoRLMoveItem.h"


GoRLMoveItem::GoRLMoveItem()
{

}

GoRLMoveItem::GoRLMoveItem(GoRLMoveItem& other)
{
  copy(other);
}

GoRLMoveItem::GoRLMoveItem(const GoRLMoveItem& other)
{
  copy(other);
}

GoRLMoveItem::GoRLMoveItem(GoBoard &board, GoMove &move, std::vector<float> &q_values)
{
  set(board, move, q_values);
}

GoRLMoveItem::~GoRLMoveItem()
{

}

GoRLMoveItem& GoRLMoveItem::operator= (GoRLMoveItem& other)
{
  copy(other);
  return *this;
}

GoRLMoveItem& GoRLMoveItem::operator= (const GoRLMoveItem& other)
{
  copy(other);
  return *this;
}

void GoRLMoveItem::copy(GoRLMoveItem& other)
{
  move      = other.move;
  board     = other.board;
  q_values  = other.q_values;
}

void GoRLMoveItem::copy(const GoRLMoveItem& other)
{
  move      = other.move;
  board     = other.board;
  q_values  = other.q_values;
}


void GoRLMoveItem::set(GoBoard &board, GoMove &move, std::vector<float> &q_values)
{
  this->board    = board;
  this->move     = move;
  this->q_values = q_values;
}

void GoRLMoveItem::set_q_value(float q_value)
{
  unsigned int idx = move.move_to_idx(board.size());
  q_values[idx] = q_value;

 
  for (unsigned int i = 0; i < q_values.size(); i++)
  {
    if (q_values[i] < -1.0)
      q_values[i] = -1.0;

    if (q_values[i] > 1.0)
      q_values[i] = 1.0;
  }
}

GoBoard& GoRLMoveItem::get_board()
{
  return board;
}

GoMove& GoRLMoveItem::get_move()
{
  return move;
}

std::vector<float>& GoRLMoveItem::get_q_values()
{
  return q_values;
}
